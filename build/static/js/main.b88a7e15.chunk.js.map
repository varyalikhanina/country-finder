{"version":3,"sources":["components/countrySelector/CountriesSelector.js","components/numberSelector/NumberSelector.js","App.js","index.js"],"names":["styles","option","provided","state","borderBottom","color","isSelected","padding","control","width","display","alignItems","indicatorSeparator","loadingIndicator","singleValue","opacity","isDisabled","transition","CountriesSelector","props","loadOptions","inputValue","callback","a","fetch","response","json","countries","countriesSliced","slice","quantity","map","country","label","name","value","alpha2Code","className","size","css","role","aria-labelledby","placeholder","this","loadingMessage","getSpinner","noOptionsMessage","showNoOptionsMessage","Component","options","NumberSelector","changeQuantity","onChange","data-testid","bind","App","handleChange","n","setState","render","document","getElementById"],"mappings":"gUAIMA,EAAS,CACXC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,aAAc,qBACdC,MAAOF,EAAMG,WAAa,UAAY,UACtCC,QAAS,MAEXC,QAAS,iBAAO,CACdC,MAAO,OACPC,QAAS,OACTC,WAAY,WAEdC,mBAAoB,iBAAO,CACvBF,QAAS,SAEbG,iBAAkB,iBAAO,CACrBH,QAAS,SAEbI,YAAa,SAACZ,EAAUC,GACtB,IAAMY,EAAUZ,EAAMa,WAAa,GAAM,EAEzC,OAAO,2BAAKd,GAAZ,IAAsBa,UAASE,WADZ,oBA0DVC,E,kDA/Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,YAPmB,uCAOL,WAAOC,EAAYC,GAAnB,mBAAAC,EAAA,yDACPF,EADO,yCAEHC,EAAS,KAFN,uBAIWE,MAAM,yCAAD,OAA0CH,IAJ1D,cAINI,EAJM,gBAKYA,EAASC,OALrB,OAKNC,EALM,OAMNC,EAAkBD,EAAUE,MAAM,EAAhB,UAAsB,EAAKV,MAAMW,WACzDR,EAASM,EAAgBG,KAAI,SAACC,GAAD,MAAc,CAAEC,MAAOD,EAAQE,KAAMC,MAAOH,EAAQI,gBAPrE,4CAPK,wDAEjB,EAAKjC,MAAQ,CACXkB,WAAY,IAHG,E,yDAkBf,OAAO,yBAAKgB,UAAU,WACtB,kBAAC,IAAD,CACEC,KAAM,GACNjC,MAAO,UACPkC,IA5BW,mD,6CAkCb,OAAO,yBAAKF,UAAU,cAClB,4DAAiC,0BAAMG,KAAK,MAAMC,kBAAgB,oBAAjC,oB,+BAKvC,OAAQ,6BACN,kBAAC,IAAD,CACEC,YAAa,iBACbtB,YAAauB,KAAKvB,YAClBpB,OAAQA,EACR4C,eAAgBD,KAAKE,WACrBC,iBAAkBH,KAAKI,4B,GAzCCC,a,QC/B1BhD,EAAS,CACXC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,aAAc,qBACdC,MAAOF,EAAMG,WAAa,UAAY,UACtCC,QAAS,MAEXC,QAAS,iBAAO,CACdC,MAAO,OACPC,QAAS,OACTC,WAAY,WAEd+B,YAAa,iBAAO,CAClBrC,MAAO,SAETO,mBAAoB,iBAAO,CACvBF,QAAS,SAEbG,iBAAkB,iBAAO,CACrBH,QAAS,UAIXuC,EAAU,CACd,CAAEd,MAAO,KAAMF,MAAO,MACtB,CAAEE,MAAO,KAAMF,MAAO,MACtB,CAAEE,MAAO,KAAMF,MAAO,OA4BTiB,E,kDAxBb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAMRgC,eAAiB,SAAC9B,GAChB,EAAKF,MAAMiC,SAAS/B,EAAWc,QAN/B,EAAKhC,MAAQ,CACXkB,WAAY,IAHG,E,qDAYjB,OAAQ,yBAAKgC,cAAY,mBACvB,kBAAC,IAAD,CACIJ,QAASA,EACTP,YAAa,KACb1C,OAAQA,EACRoD,SAAUT,KAAKQ,eAAeG,KAAKX,a,GAlBhBK,aCIdO,E,kDA9Bb,aAAe,IAAD,8BACZ,gBAMFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAC5B,SAAU2B,KANzB,EAAKtD,MAAQ,CACX2B,SAAU,IAHA,E,qDAYZ,OACE,6BACE,wBAAIO,UAAU,sBAAd,qCACA,yBAAKA,UAAU,aACf,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CACEP,SAAUa,KAAKxC,MAAM2B,YAEzB,yBAAKO,UAAU,mBACb,kBAAC,EAAD,CACEe,SAAUT,KAAKa,sB,GAvBTR,aCAlBW,iBAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.b88a7e15.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst styles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted #c44536',\n      color: state.isSelected ? '#c44536' : '#197278',\n      padding: 15,\n    }),\n    control: () => ({\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    indicatorSeparator: () => ({\n        display: 'none',\n    }),\n    loadingIndicator: () => ({\n        display: 'none',\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n      return { ...provided, opacity, transition };\n    }\n}\n\nconst spinnerStyles = `\n  display: block;\n  margin: 10px auto;\n`;\n\nclass CountriesSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: ''\n    }\n  }\n\n  loadOptions = async (inputValue, callback) => {\n    if (!inputValue) {\n      return callback([]);\n    }\n    const response = await fetch(`https://restcountries.eu/rest/v2/name/${inputValue}`);\n    const countries = await response.json();\n    const countriesSliced = countries.slice(0, `${this.props.quantity}`);\n    callback(countriesSliced.map((country) => ({ label: country.name, value: country.alpha2Code })));\n  }    \n\n  getSpinner() {\n      return <div className=\"loading\">\n      <ClipLoader\n        size={30}\n        color={\"#c44536\"}\n        css={spinnerStyles}\n      />\n    </div>\n  }\n\n  showNoOptionsMessage() {\n      return <div className=\"no-options\">\n          <p>Sorry. Nothing has been found <span role=\"img\" aria-labelledby=\"no options emoji\">&#128532;</span></p>\n      </div>\n  }\n\n  render () {\n    return (<div>\n      <AsyncSelect\n        placeholder={'Type something'}\n        loadOptions={this.loadOptions}\n        styles={styles}\n        loadingMessage={this.getSpinner}\n        noOptionsMessage={this.showNoOptionsMessage}\n      />\n    </div>\n    )\n  }\n}\n\nexport default CountriesSelector;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nconst styles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted #c44536',\n      color: state.isSelected ? '#c44536' : '#197278',\n      padding: 15,\n    }),\n    control: () => ({\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    placeholder: () => ({\n      color: '#000',\n    }),\n    indicatorSeparator: () => ({\n        display: 'none',\n    }),\n    loadingIndicator: () => ({\n        display: 'none',\n    }),\n}\n\nconst options = [\n  { value: '10', label: '10' },\n  { value: '20', label: '20' },\n  { value: '50', label: '50' }\n]\n\nclass NumberSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: ''\n    }\n  }\n\n  changeQuantity = (inputValue) => {\n    this.props.onChange(inputValue.value);\n  }\n  \n  render () {\n    return (<div data-testid=\"number-selector\">\n      <Select \n          options={options} \n          placeholder={'10'} \n          styles={styles}\n          onChange={this.changeQuantity.bind(this)}\n      />\n    </div>\n    )\n  }\n}\n\nexport default NumberSelector;","import React, { Component } from 'react';\nimport './styles/App.css';\nimport CountriesSelector from './components/countrySelector/CountriesSelector';\nimport NumberSelector from './components/numberSelector/NumberSelector';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quantity: 10\n    }\n  }\n\n  handleChange = (n) => {\n    this.setState({quantity: n});\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"selectors__heading\">What country are you looking for?</h1>\n        <div className=\"selectors\">\n        <div className=\"selector-country\">\n          <CountriesSelector \n            quantity={this.state.quantity} />\n        </div>\n        <div className=\"selector-number\">\n          <NumberSelector \n            onChange={this.handleChange}/>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nrender(<App/>, document.getElementById('root'));"],"sourceRoot":""}